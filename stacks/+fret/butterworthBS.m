function [Hd, bandstopFreq, sos_var, g] = butterworthBS(Fsampling, Fstop, Fpass, Astop)
%Hd = butterworthBS(Fsampling, Fstop, Fpass, Astop) returns a discrete-time filter object.
% Fstop = [8 14];  % Stopband Frequency
% Fpass = [7 15];  % Passband Frequency
% Astop = 40;   % Stopband Attenuation (dB)
%
% see also. butterworthHP.m
% 2018.1.4 generated by DS
% 

% Butterworth Highpass filter designed using the BUTTER function.

% All frequency values are in Hz.
Fs = Fsampling;  % Sampling Frequency

Apass = 1;    % Passband Ripple (dB)

% Calculate the order from the parameters using BUTTORD.
[N,Fc] = buttord(Fpass/(Fs/2), Fstop/(Fs/2), Apass, Astop);

% Calculate the zpk values using the BUTTER function.
[z,p,k] = butter(N, Fc, 'stop');
bandstopFreq = Fc*Fs/2;
% To avoid round-off errors, do not use the transfer function.  Instead
% get the zpk representation and convert it to second-order sections.
[sos_var,g] = zp2sos(z, p, k);
Hd          = dfilt.df2sos(sos_var, g);

% [EOF]
